#!/bin/env bash

# Update bootc containers
# SPDX-License-Identifier: MIT
set -eu

# Which PROJECTS should be built?
PROJECTS=(
)

# Branch to use for automatic update build
BRANCH="master"
AUTOUPDATE_DIR="${HOME}/auto-updates"
REPODIR="${HOME}/repos/"

if [[ ! -d ~/auto-updates/ ]]; then
	mkdir -p "${AUTOUPDATE_DIR}"
fi

for project in "${PROJECTS[@]}"; do
	WORKDIR="${AUTOUPDATE_DIR}/${project}-${BRANCH}"

	if [[ -d ${WORKDIR} ]]; then
		rm -rf "${WORKDIR:?}"
	fi

	git clone --branch "${BRANCH}" "${REPODIR}/${project}.git" "${WORKDIR}"
	cd "${WORKDIR}"

	if [[ -d .git-crypt ]]; then
		git --git-dir .git --work-tree . crypt unlock
	fi

	if [[ -f ${WORKDIR}/.simple-ci/${BRANCH}.conf ]]; then
		buildid=$(date -u +%Y%m%d.%H%M)

		# shellcheck source=/dev/null
		source "${WORKDIR}/.simple-ci/${BRANCH}.conf"

		"${HOME}"/.ci/scripts/ci-build -p "${project}" \
			--workdir "${WORKDIR}" \
			--build-id "${buildid}" \
			--config "${WORKDIR}/.simple-ci/${BRANCH}.conf" \
			--branch "${BRANCH}"
	else
		echo "WARNING: No ${BRANCH}.conf found in project ${project}."
	fi

	if [[ -d .git-crypt ]]; then
		git --git-dir .git --work-tree . crypt lock
	fi

	rm -rf "${WORKDIR:?}"
done

# Extra images for Raspberry Pi
# Which PROJECTS should be built?
PROJECTS=(
)

# Branch to use for automatic update build
BRANCH="rpi"

for project in "${PROJECTS[@]}"; do
	WORKDIR="${AUTOUPDATE_DIR}/${project}-${BRANCH}"

	if [[ -d ${WORKDIR} ]]; then
		rm -f "${WORKDIR}"
	fi

	git clone --branch "${BRANCH}" "${REPODIR}/${project}.git" "${WORKDIR}"

	cd "${WORKDIR}"

	if [[ -f ${WORKDIR}/.simple-ci/${BRANCH}.conf ]]; then
		buildid=$(date -u +%Y%m%d.%H%M)

		# shellcheck source=/dev/null
		source "${WORKDIR}/.simple-ci/${BRANCH}.conf"

		"${HOME}"/.ci/scripts/ci-build -p "${project}" \
			--workdir "${WORKDIR}" \
			--build-id "${buildid}" \
			--config "${WORKDIR}/.simple-ci/${BRANCH}.conf" \
			--branch "${BRANCH}"
	else
		echo "WARNING: No ${BRANCH}.conf found in project ${project}."
	fi
	rm -rf "${WORKDIR:?}"
done
